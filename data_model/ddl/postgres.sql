CREATE EXTENSION IF NOT EXISTS tablefunc;

CREATE TABLE DATA_PNT 
    ( 
     DATA_PNT_ID BIGINT NOT NULL , 
     DATA_PNT_CAN_ID INTEGER , 
     NAME VARCHAR (50) , 
     DESCR VARCHAR (256) , 
     DATA_LEN INTEGER , 
     CAN_DATA_OFFST INTEGER , 
     DATA_TYPE VARCHAR , 
     LOW_ERR_THRHLD DOUBLE PRECISION , 
     LOW_WRNG_THRHLD DOUBLE PRECISION , 
     HIGH_WRNG_THRHLD DOUBLE PRECISION , 
     HIGH_ERR_THRHLD DOUBLE PRECISION , 
     MSRMNT_ID_FK BIGINT NOT NULL , 
     UNITS VARCHAR (30) 
    ) 
;


CREATE INDEX DATA_PNT__IDXv1 ON DATA_PNT 
    ( 
     DATA_PNT_CAN_ID ASC 
    ) 
;

ALTER TABLE DATA_PNT 
    ADD CONSTRAINT DATA_PNT_PK PRIMARY KEY ( DATA_PNT_ID ) ;



CREATE TABLE DEV 
    ( 
     DEV_ID BIGINT NOT NULL , 
     DEV_NAME VARCHAR (255) , 
     DEV_ABBREV VARCHAR (10) 
    ) 
;


ALTER TABLE DEV 
    ADD CONSTRAINT DEV_PK PRIMARY KEY ( DEV_ID ) ;


CREATE TABLE DEV_TYPE 
    ( 
     DEV_TYPE_ID BIGINT NOT NULL , 
     DEV_TYPE VARCHAR (20) 
    ) 
;


ALTER TABLE DEV_TYPE 
    ADD CONSTRAINT DEV_TYPE_PK PRIMARY KEY ( DEV_TYPE_ID ) ;

ALTER TABLE DEV_TYPE 
    ADD CONSTRAINT DEV_TYPE_UK UNIQUE ( DEV_TYPE ) ;



CREATE TABLE MSRMNT 
    ( 
     MSRMNT_ID BIGINT NOT NULL , 
     MSRMNT_NAME VARCHAR (255) , 
     CAN_ID INTEGER UNIQUE, 
     DEV_ID_FK BIGINT NOT NULL , 
     DEV_TYPE_ID_FK BIGINT NOT NULL , 
     REPRTNG_FRQ INTEGER , 
     MSRMNT_TYPE VARCHAR 
    ) 
;


CREATE INDEX MSRMNT__IDXv1 ON MSRMNT 
    ( 
     CAN_ID ASC 
    ) 
;

ALTER TABLE MSRMNT 
    ADD CONSTRAINT MSRMNT_PK PRIMARY KEY ( MSRMNT_ID ) ;




CREATE TABLE MSRMNT_TYPE 
    (      
     MSRMNT_TYPE_ID BIGINT NOT NULL , 
     MSRMNT_TYPE VARCHAR (255) , 
     LOW_ERR_THRHLD DOUBLE PRECISION , 
     LOW_WRNG_THRHLD DOUBLE PRECISION , 
     HIGH_ERR_THRHLD DOUBLE PRECISION , 
     HIGH_WRNG_THRHLD DOUBLE PRECISION , 
     REPRTNG_FRQ INTEGER 
    ) 
;

CREATE INDEX MSRMNT_TYPE__IDXv1 ON MSRMNT_TYPE
    ( 
     MSRMNT_TYPE_ID ASC 
    ) 
;

ALTER TABLE MSRMNT_TYPE 
    ADD CONSTRAINT MSRMNT_TYPE__PK PRIMARY KEY ( MSRMNT_TYPE_ID ) ;



CREATE TABLE MSRMNT_DATA 
    ( 
     MSRMNT_DATA_ID BIGINT NOT NULL , 
     DATA_PNT_CAN_ID INTEGER NOT NULL , 
     TSTAMP TIMESTAMPTZ NOT NULL , 
     EXTD BOOLEAN , 
     RTR BOOLEAN , 
     DATA_LEN INTEGER , 
     FVAL DOUBLE PRECISION , 
     IVAL INTEGER , 
     CVAL VARCHAR (16) , 
     STATE VARCHAR (10) CHECK ( STATE IN ('HighErr', 'HighWarn', 'LowErr', 'LowWarn', 'Normal')) 
    ) 
;

CREATE INDEX MSRMNT_DATA_IDXv1 ON MSRMNT_DATA 
    ( 
     DATA_PNT_CAN_ID ASC 
    ) 
;
CREATE INDEX MSRMNT_DATA_IDXv2 ON MSRMNT_DATA 
    ( 
     TSTAMP ASC 
    ) 
;

SELECT create_hypertable('msrmnt_data', 'tstamp');							   
							   
-- This is enforced in spring due to a limitation in TimescaleDB which prevents you from
-- having a constraint on a field that is not he partition field
--ALTER TABLE MSRMNT_DATA 
--    ADD CONSTRAINT MSRMNT_DATA_PK PRIMARY KEY ( MSRMNT_DATA_ID ) ;



ALTER TABLE DATA_PNT 
    ADD CONSTRAINT MSRMNT_DATA_PNT FOREIGN KEY 
    ( 
     MSRMNT_ID_FK
    ) 
    REFERENCES MSRMNT 
    ( 
     MSRMNT_ID
    ) 
;


ALTER TABLE MSRMNT 
    ADD CONSTRAINT DEV_MSRMNT FOREIGN KEY 
    ( 
     DEV_ID_FK
    ) 
    REFERENCES DEV 
    ( 
     DEV_ID
    ) 
;


ALTER TABLE MSRMNT 
    ADD CONSTRAINT MSRMNT_DEV_TYPE FOREIGN KEY 
    ( 
     DEV_TYPE_ID_FK
    ) 
    REFERENCES DEV_TYPE 
    ( 
     DEV_TYPE_ID
    ) 
;





-- 
-- VIEWS
-- 

CREATE OR REPLACE VIEW ALERTS AS
SELECT t1.DATA_PNT_CAN_ID,
  t1.TSTAMP,
  t1.FVAL,
  t1.IVAL,
  t1.CVAL,
  t1.STATE
FROM MSRMNT_DATA t1
WHERE t1.TSTAMP =
  (SELECT MAX(t2.TSTAMP)
  FROM MSRMNT_DATA t2
  WHERE t1.DATA_PNT_CAN_ID = t2.DATA_PNT_CAN_ID
  )
AND t1.STATE != 'Normal' ;


CREATE OR REPLACE VIEW splunk_lookup_data AS
 SELECT data_pnt.data_pnt_can_id,
    data_pnt.name AS data_pnt_name,
    dev.dev_name,
    msrmnt.msrmnt_name
   FROM data_pnt
     JOIN msrmnt ON data_pnt.msrmnt_id_fk = msrmnt.msrmnt_id
     JOIN dev ON msrmnt.dev_id_fk = dev.dev_id;

ALTER TABLE splunk_lookup_data
  OWNER TO prohelion;



CREATE SEQUENCE IF NOT EXISTS HIBERNATE_SEQUENCE START WITH 1 INCREMENT BY 1; 