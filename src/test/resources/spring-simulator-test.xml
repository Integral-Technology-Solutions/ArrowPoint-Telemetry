<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-ip="http://www.springframework.org/schema/integration/ip"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/ip
		http://www.springframework.org/schema/integration/ip/spring-integration-ip.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.teamarrow.utils.test"/>
	
	<bean id="LogReplayer" class="au.com.teamarrow.utils.test.LogReplayer"/>
	<bean id="CruiseControlStepTest" class="au.com.teamarrow.utils.test.CruiseControlStepTest"/>
	<bean id="CruiseControlTest" class="au.com.teamarrow.utils.test.CruiseControlTest"/>
	<bean id="CarTestUtils" class="au.com.teamarrow.utils.test.CarTestUtils"/>
	<bean id="CruiseSimulator" class="au.com.teamarrow.utils.test.CruiseSimulator"/>
	
	<bean id="udpPacketSerializer" class="au.com.teamarrow.canbus.serial.UdpPacketSerializer"/>
	<bean id="udpPacketDeserializer" class="au.com.teamarrow.canbus.serial.UdpPacketDeserializer"/>
	<bean id="canPacketSplitter" class="au.com.teamarrow.canbus.serial.CanPacketSplitter"/>
	<bean id="cruiseSimulatorService" class="au.com.teamarrow.service.impl.CruiseSimulatorServiceImpl">
		<property name="variationHertz" value="5"/>
		<property name="velocityVariationPercent" value="0.001"/>	
		<property name="active" value="false"/>
	</bean>	
	
	
	<int:channel id="canbusOutputChannel"
		datatype="au.com.teamarrow.canbus.model.UdpPacket">
	</int:channel>	
	
	<int:payload-serializing-transformer id="udpPacketSerializingTransformer"
		input-channel="canbusOutputChannel"
		serializer="udpPacketSerializer"
		output-channel="output">
	</int:payload-serializing-transformer>
	
	<int:channel id="output" />
	
	<int-ip:udp-outbound-channel-adapter id="canbusSender"
	    host="239.255.60.60"
    	port="4876"
    	multicast="true"
    	check-length="false"
    	channel="output" />

	<int-ip:udp-inbound-channel-adapter id="bridgeReceiver"
		channel="canbusBridgeChannel" port="4876" receive-buffer-size="1500"
		multicast="true" check-length="false" lookup-host="false"
		multicast-address="239.255.60.60" />

	<int:channel id="canbusBridgeChannel">
	</int:channel>

	<int:payload-deserializing-transformer id="udpPacketDeserializingTransformer"
		input-channel="canbusBridgeChannel"
		deserializer="udpPacketDeserializer"
		output-channel="udpPacketChannel">
	</int:payload-deserializing-transformer>
	
	<int:channel id="udpPacketChannel"
		datatype="au.com.teamarrow.canbus.model.UdpPacket">
	</int:channel>
	
	<int:splitter id="canPacketSplitRouter"
		input-channel="udpPacketChannel" 
		output-channel="canPacketChannel" 
		ref="canPacketSplitter">
	</int:splitter>
	
	<int:channel id="canPacketChannel"
		datatype="au.com.teamarrow.canbus.model.CanPacket">
	</int:channel>
	
	<int:channel id="filteredCanPacketChannel"
		datatype="au.com.teamarrow.canbus.model.CanPacket">
	</int:channel>

	<int:service-activator id="cruiseSimulator"
		input-channel="filteredCanPacketChannel" output-channel="nullChannel"
		ref="cruiseSimulatorService" />

	<int:recipient-list-router id="canFilter" input-channel="canPacketChannel">
		<int:recipient channel="filteredCanPacketChannel" selector-expression="payload.idBase10 eq 1281 or payload.idBase10 eq 1287 or payload.idBase10 eq 1288 " /> <!-- no 0x501 with 1281 -->
		<int:recipient channel="nullChannel" selector-expression="payload.idBase10 ne 1281 and payload.idBase10 ne 1287 and payload.idBase10 ne 1288" />
	</int:recipient-list-router>

	<int:logging-channel-adapter id="payloadLogger"
		level="INFO"
		expression="'Payload:' + payload" />
	
	
</beans>
