<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-ip="http://www.springframework.org/schema/integration/ip"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int-splunk="http://www.springframework.org/schema/integration/splunk"
	xsi:schemaLocation="http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/ip
		http://www.springframework.org/schema/integration/ip/spring-integration-ip.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration/splunk 
		http://www.springframework.org/schema/integration/splunk/spring-integration-splunk.xsd">

	<context:component-scan base-package="com.prohelion.utils.test"/>
		
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	  <property name="location">
	    <value>application.properties</value>
	  </property>
	</bean>				
		
	<bean id="udpPacketSerializer" class="com.prohelion.canbus.serial.UdpPacketSerializer"/>
	<bean id="udpPacketDeserializer" class="com.prohelion.canbus.serial.UdpPacketDeserializer"/>
	<bean id="canPacketSplitter" class="com.prohelion.canbus.serial.CanPacketSplitter"/>
	<bean id="enricherBean" class="com.prohelion.service.impl.MeasurementDataEnrichment"/>
	<bean id="fleetServiceBean" class="com.prohelion.service.impl.FleetServiceImpl"/>				
	<bean id="mapGeneratorBean" class="com.prohelion.maps.impl.MapGenerator"/>
	
	<!-- These beans are used to set up the core engine of alerts system -->
	<bean id="AlertManager" class="com.prohelion.alerts.AlertManager">
		<property name="enableAlerts" value="${enable.alerts}"/>
		<property name="alertsFile" value="${alerts.values.file}"/>
		<property name="flagsFile" value="${alerts.flags.file}"/>
		<property name="normalLevelScript" value="StatusNormal.bat"/>
		<property name="warningLevelScript" value="StatusWarning.bat"/>
		<property name="alertLevelScript" value="StatusAlert.bat"/>
		<property name="shutdownLevelScript" value="StatusShutdown.bat"/>
		<property name="scriptDir" value="${alerts.dir}"/>
		<property name="supressionDelay" value="3"/>
	</bean>

	<!-- These beans are used to set up the core engine of maps system -->
	<bean id="Route" class="com.prohelion.maps.impl.CvsRouteImpl">
		<property name="routeFile" value="/test_routedata.csv"/>
		<property name="controlStopDistances">
			<list>
				<value>321000</value>
				<value>633000</value>
				<value>988000</value>
				<value>1302000</value>
				<value>1493000</value>
				<value>1766000</value>
				<value>2171000</value>
				<value>2432000</value>
				<value>2719000</value>
			</list>
		</property>
		<property name ="controlStopDescriptions">
			<list>	
				<value>"Katherine Control Stop"</value>
				<value>"Dunmarra Control Stop"</value>
				<value>"Tennant Creek Control Stop"</value>
				<value>"Ti Tree Control Stop"</value>
				<value>"Alice Springs Control Stop"</value>
				<value>"Kulgera Control Stop""</value>
				<value>"Coober Pedy Control Stop"</value>
				<value>"Glendambo Control Stop"</value>
				<value>"Port Augusta Control Stop"</value>
			</list>
		</property>
	</bean>
	
	
	
	<int:channel id="canbusOutputChannel"
		datatype="com.prohelion.canbus.model.UdpPacket">
	</int:channel>	
	
	<int:payload-serializing-transformer id="udpPacketSerializingTransformer"
		input-channel="canbusOutputChannel"
		serializer="udpPacketSerializer"
		output-channel="output">
	</int:payload-serializing-transformer>
	
	<int:channel id="output" />
	
	<int-ip:udp-outbound-channel-adapter id="canbusSender"
	    host="239.255.60.60"
    	port="4876"
    	multicast="true"
    	check-length="false"
    	channel="output" />

	
	 <!-- Splunk Configuration -->
	 
	<int:transformer id="measurementDataToSplunkTransformer" input-channel="measurementAggregatedDataChannel"
                output-channel="splunkData" ref="measurementDataToSplunkTransformerBean"/>
                
	<bean id="measurementDataToSplunkTransformerBean" class="com.prohelion.splunk.MeasurementDataToSplunkTransformer"/>                
                	
	 <int:channel id="splunkData"/>
	 <int:channel id="measurementAggregatedDataChannel"/>		
     
     <int-splunk:server id="splunkServer"
		host="${splunk.host}" port="${splunk.port}" username="${splunk.username}"
		password="${splunk.password}" owner="${splunk.owner}" scheme="${splunk.scheme}" />
     
     	
	 <!-- <int-splunk:outbound-channel-adapter id="splunkOutboundChannelAdapter" channel="splunkData" splunk-server-ref="splunkServer">     
     	<int-splunk:tcp-writer port="9999"/>
     </int-splunk:outbound-channel-adapter> -->
		
	 
	 
	 <int:delayer id="delayer" input-channel="splunkData"
	 	output-channel="nullChannel" default-delay="1">
	 </int:delayer>
</beans>