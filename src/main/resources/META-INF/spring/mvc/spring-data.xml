<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
				http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
				http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

				
	<tx:annotation-driven transaction-manager="transactionManager" />
 
	<!-- Activate Spring Data JPA repository support -->
  	<jpa:repositories base-package="au.com.teamarrow.dao" />
  	
	<!-- Declare a datasource that has pooling capabilities-->	 
<!-- 	<bean id="jpaDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" -->
<!-- 		destroy-method="close" -->
<!-- 		p:driverClass="${app.jdbc.driverClassName}" -->
<!-- 		p:jdbcUrl="${app.jdbc.url}" -->
<!-- 		p:user="${app.jdbc.username}" -->
<!-- 		p:password="${app.jdbc.password}" -->
<!-- 		p:acquireIncrement="5" -->
<!-- 		p:idleConnectionTestPeriod="60" -->
<!-- 		p:maxPoolSize="100" -->
<!-- 		p:maxStatements="50" -->
<!-- 		p:minPoolSize="10" /> -->
 
 	<!-- Declare a JPA entityManagerFactory -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" 
		p:persistenceUnitName="hibernatePersistenceUnit"
		p:dataSource-ref="dataSource"
		p:jpaVendorAdapter-ref="hibernateVendor"
		p:packagesToScan="au.com.teamarrow.model">
		<property name="jpaProperties">
	      <props>
	        <!-- <prop key="hibernate.hbm2ddl.auto">create-drop</prop> -->
	        <!-- <prop key="hibernate.hbm2ddl.auto">validate</prop> -->
	        <prop key="hibernate.hbm2ddl.auto">update</prop>
	        <prop key="hibernate.show_sql">false</prop>
	        <prop key="jadira.usertype.autoRegisterUserTypes">true</prop>
            <prop key="jadira.usertype.databaseZone">jvm</prop>
            <prop key="jadira.usertype.javaZone">jvm</prop>
	      </props>
	    </property>
	</bean>
 
	<!-- Specify our ORM vendor -->
	<bean id="hibernateVendor" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="true"/>
 
	<!-- Declare a transaction manager-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" p:entityManagerFactory-ref="entityManagerFactory"/>
				
	<!-- Process @PersistenceContext to inject entity manager factory -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />			

  	<cache:annotation-driven />
  	
  	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
	  <property name="caches">
	    <set>
	      <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default"/>
	      <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="controllers"/>
	      <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="devices"/>
	      <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="MeasureRepoCanSetupById" />
	      <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="DataPointRepoCanSetupById" />
	      <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="DataPointRepoCanSetupByMeasurement" />	      
	      <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="LatestMeasurement" />
	    </set>
	  </property>
	</bean>
  	
<!--   	<jpa:repositories base-package="au.com.teamarrow.dao" /> -->
  	
<!--   	<tx:annotation-driven /> -->
  	
<!--   	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> -->
<!-- 		<property name="entityManagerFactory" ref="entityManagerFactory" /> -->
<!-- 	</bean> -->
 
<!-- 	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource"/> -->
<!--         <property name="packagesToScan" value="au.com.teamarrow" /> -->
<!--         <property name="hibernateProperties"> -->
<!--             <props> -->
<!--                 <prop key="hibernate.bytecode.provider">javassist</prop> -->
<!--                 <prop key="hibernate.show_sql">true</prop> -->
<!--                 <prop key="hibernate.format_sql">true</prop> -->
<!--                 <prop key="hibernate.order_updates">false</prop>     -->
<!--                 <prop key="hibernate.hbm2ddl.auto">create-drop</prop> -->
<!--             </props> -->
<!--         </property> -->
<!-- 	</bean> -->
	
	<!-- <jdbc:embedded-database id="dataSource">
	</jdbc:embedded-database> -->
	
	<bean id="baseDS" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${hibernate.connection.driver_class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
    </bean>

    <bean id="dsConnectionFactory" class="org.apache.commons.dbcp.DataSourceConnectionFactory">
        <constructor-arg><ref bean="baseDS"/></constructor-arg>
    </bean>


    <bean id="pool" class="org.apache.commons.pool.impl.GenericObjectPool">
        <property name="maxActive"><value>50</value></property>
        <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
        <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
        <property name="testWhileIdle"><value>true</value></property>
    </bean>

    <bean id="poolableConnectionFactory" class="org.apache.commons.dbcp.PoolableConnectionFactory">
        <constructor-arg index="0"><ref bean="dsConnectionFactory" /></constructor-arg>
        <constructor-arg index="1"><ref bean="pool"/></constructor-arg>
        <constructor-arg index="2"><null /></constructor-arg>
        <constructor-arg index="3"><value>select 1</value></constructor-arg>
        <constructor-arg index="4"><value>false</value></constructor-arg>
        <constructor-arg index="5"><value>true</value></constructor-arg>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.PoolingDataSource" depends-on="poolableConnectionFactory">
        <constructor-arg><ref bean="pool" /></constructor-arg>
    </bean>

<!-- 	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="packagesToScan" value="au.com.teamarrow" /> -->
<!-- 		<property name="jpaVendorAdapter"> -->
<!-- 			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> -->
<!-- 				<property name="showSql" value="true" /> -->
<!-- 	       		<property name="generateDdl" value="false" /> -->
<!-- 	       		<property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" /> -->
<!-- 			</bean> -->
<!-- 		</property> -->
<!-- 	</bean> -->


	
</beans>
