package au.com.teamarrow.model;

// Generated 07/08/2013 11:47:52 PM by Hibernate Tools 4.0.0

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Measurement generated by hbm2java
 */
@Entity
@Table(name = "msrmnt", schema = "public")
public class Measurement implements Serializable {

	private static final long serialVersionUID = -3706096966965380756L;
	
	private long id;
    private DeviceType deviceType;
    private Device device;
    private String name;
    private Integer canId;
    private Integer reportingFrequency;
    private String type;
    private Set<DataPoint> dataPoints = new HashSet<DataPoint>(0);

    public Measurement() {
    }

    public Measurement(long id) {
        this.id = id;
    }

    public Measurement(long id, DeviceType deviceType, Device device, String name, Integer canId,
        Integer reportingFrequency, String type, Set<DataPoint> dataPoints) {
        this.id = id;
        this.deviceType = deviceType;
        this.device = device;
        this.name = name;
        this.canId = canId;
        this.reportingFrequency = reportingFrequency;
        this.type = type;
        this.dataPoints = dataPoints;
    }

    @Id
    @Column(name = "msrmnt_id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "dev_type_id_fk")
    @JsonIgnore
    public DeviceType getDeviceType() {
        return this.deviceType;
    }

    public void setDeviceType(DeviceType deviceType) {
        this.deviceType = deviceType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "dev_id_fk")
    @JsonIgnore
    public Device getDevice() {
        return this.device;
    }

    public void setDevice(Device device) {
        this.device = device;
    }

    @Column(name = "msrmnt_name")
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "can_id")
    public Integer getCanId() {
        return this.canId;
    }

    public void setCanId(Integer canId) {
        this.canId = canId;
    }

    @Column(name = "reprtng_frq")
    public Integer getReportingFrequency() {
        return this.reportingFrequency;
    }

    public void setReportingFrequency(Integer reportingFrequency) {
        this.reportingFrequency = reportingFrequency;
    }

    @Column(name = "msrmnt_type")
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "measurement")
    @JsonIgnore
    public Set<DataPoint> getDataPoints() {
        return this.dataPoints;
    }

    public void setDataPoints(Set<DataPoint> dataPoints) {
        this.dataPoints = dataPoints;
    }
}
