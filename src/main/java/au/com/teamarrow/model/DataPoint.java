package au.com.teamarrow.model;

// Generated 07/08/2013 11:47:52 PM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * DataPoint generated by hbm2java
 */
@Entity
@Table(name = "data_pnt", schema = "public")
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
@JsonInclude
@JsonIgnoreProperties({"measurement"})
public class DataPoint implements java.io.Serializable {

    private long id;
    private Measurement measurement;
    private Integer dataPointCanId;
    private String name;
    private String description;
    private Integer length;
    private Integer dataOffsetPosition;
    private String type;
    private Double lowErrorThreshold;
    private Double lowWarningThreshold;
    private Double highWarningThreshold;
    private Double highErrorThreshold;
    private String units;

    public DataPoint() {
    }

    public DataPoint(long id, Measurement measurement) {
        this.id = id;
        this.measurement = measurement;
    }

    public DataPoint(long Id, Measurement measurement, Integer dataPointCanId, String name, String description,
        Integer length, Integer dataOffsetPosition, String type, Double lowErrorThreshold, Double lowWarningThreshold,
        Double highWarningThreshold, Double highErrorThreshold, String units) {
        this.id = Id;
        this.measurement = measurement;
        this.dataPointCanId = dataPointCanId;
        this.name = name;
        this.description = description;
        this.length = length;
        this.dataOffsetPosition = dataOffsetPosition;
        this.type = type;
        this.lowErrorThreshold = lowErrorThreshold;
        this.lowWarningThreshold = lowWarningThreshold;
        this.highWarningThreshold = highWarningThreshold;
        this.highErrorThreshold = highErrorThreshold;
        this.units = units;
    }

    @Id
    @Column(name = "data_pnt_id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "msrmnt_id_fk", nullable = false)
    @JsonIgnore
    public Measurement getMeasurement() {
        return this.measurement;
    }

    public void setMeasurement(Measurement measurement) {
        this.measurement = measurement;
    }

    @Column(name = "data_pnt_can_id")
    public Integer getDataPointCanId() {
        return this.dataPointCanId;
    }

    public void setDataPointCanId(Integer dataPointCanId) {
        this.dataPointCanId = dataPointCanId;
    }

    @Column(name = "name", length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "descr", length = 256)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "data_len")
    public Integer getLength() {
        return this.length;
    }

    public void setLength(Integer length) {
        this.length = length;
    }

    @Column(name = "can_data_offst")
    public Integer getDataOffsetPosition() {
        return this.dataOffsetPosition;
    }

    public void setDataOffsetPosition(Integer dataOffsetPosition) {
        this.dataOffsetPosition = dataOffsetPosition;
    }

    @Column(name = "data_type")
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "low_err_thrhld", precision = 17, scale = 17)
    public Double getLowErrorThreshold() {
        return this.lowErrorThreshold;
    }

    public void setLowErrorThreshold(Double lowErrorThreshold) {
        this.lowErrorThreshold = lowErrorThreshold;
    }

    @Column(name = "low_wrng_thrhld", precision = 17, scale = 17)
    public Double getLowWarningThreshold() {
        return this.lowWarningThreshold;
    }

    public void setLowWarningThreshold(Double lowWarningThreshold) {
        this.lowWarningThreshold = lowWarningThreshold;
    }

    @Column(name = "high_wrng_thrhld", precision = 17, scale = 17)
    public Double getHighWarningThreshold() {
        return this.highWarningThreshold;
    }

    public void setHighWarningThreshold(Double highWarningThreshold) {
        this.highWarningThreshold = highWarningThreshold;
    }

    @Column(name = "high_err_thrhld", precision = 17, scale = 17)
    public Double getHighErrorThreshold() {
        return this.highErrorThreshold;
    }

    public void setHighErrorThreshold(Double highErrorThreshold) {
        this.highErrorThreshold = highErrorThreshold;
    }

    @Column(name = "units", length = 30)
    public String getUnits() {
        return this.units;
    }

    public void setUnits(String units) {
        this.units = units;
    }

}
